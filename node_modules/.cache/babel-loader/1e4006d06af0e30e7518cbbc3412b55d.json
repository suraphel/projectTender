{"ast":null,"code":"var _jsxFileName = \"A:\\\\Projects\\\\React\\\\React-router\\\\ProjectTender\\\\src\\\\pages\\\\Away.js\",\n    _s = $RefreshSig$();\n\n// Quote Detail pages\nimport { useEffect } from \"react\";\nimport { useParams, Route, Link } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../components/hooks/use-http\";\nimport { getSingleQuote } from \"../components/lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Away() {\n  _s();\n\n  const params = useParams();\n  const {\n    id\n  } = params;\n  console.log(id);\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(id);\n  }, [sendRequest, id]);\n\n  if (status === \"pending \") {\n    // show the spinner\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"centered focused\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (!loadedQuote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  } // const quote = loadedQuote.find((quote) => quote.id === params.id);\n  // if (!quote) {\n  //   return <p> No quote with such Id</p>;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      pdate: loadedQuote.pdate,\n      fdate: loadedQuote.fdate,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.id}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/quotes/${params.id}/comments`,\n          children: \"To comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.id}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Away, \"C5R1PKUmbX2cQSQOJxyiKddAdeI=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Away;\nexport default Away;\n\nvar _c;\n\n$RefreshReg$(_c, \"Away\");","map":{"version":3,"names":["useEffect","useParams","Route","Link","Comments","HighlightedQuote","useHttp","getSingleQuote","LoadingSpinner","Away","params","id","console","log","sendRequest","status","data","loadedQuote","error","text","pdate","fdate","author"],"sources":["A:/Projects/React/React-router/ProjectTender/src/pages/Away.js"],"sourcesContent":["// Quote Detail pages\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useParams, Route, Link } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { getSingleQuote } from \"../components/lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nfunction Away() {\r\n  const params = useParams();\r\n\r\n  const { id } = params;\r\n  console.log(id);\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(id);\r\n  }, [sendRequest, id]);\r\n\r\n  if (status === \"pending \") {\r\n    // show the spinner\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    <div className=\"centered focused\">\r\n      <p>{error}</p>\r\n    </div>;\r\n  }\r\n  if (!loadedQuote) {\r\n    return <p>No quote found</p>;\r\n  }\r\n\r\n  // const quote = loadedQuote.find((quote) => quote.id === params.id);\r\n  // if (!quote) {\r\n  //   return <p> No quote with such Id</p>;\r\n  // }\r\n\r\n  return (\r\n    <section>\r\n      <HighlightedQuote\r\n        text={loadedQuote.text}\r\n        pdate={loadedQuote.pdate}\r\n        fdate={loadedQuote.fdate}\r\n        author={loadedQuote.author}\r\n      />\r\n      <Route path={`/quotes/${params.id}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`/quotes/${params.id}/comments`}>\r\n            To comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      {/* <h1> Specific page Quote detail with id</h1>\r\n      <h2>{params.id}</h2> */}\r\n      {/* Nested Routes for a specific page  */}\r\n      <Route path={`/quotes/${params.id}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Away;\r\n"],"mappings":";;;AAAA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,QAAuC,kBAAvC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AAEA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACd,MAAMC,MAAM,GAAGT,SAAS,EAAxB;EAEA,MAAM;IAAEU;EAAF,IAASD,MAAf;EACAE,OAAO,CAACC,GAAR,CAAYF,EAAZ;EAEA,MAAM;IACJG,WADI;IAEJC,MAFI;IAGJC,IAAI,EAAEC,WAHF;IAIJC;EAJI,IAKFZ,OAAO,CAACC,cAAD,EAAiB,IAAjB,CALX;EAOAP,SAAS,CAAC,MAAM;IACdc,WAAW,CAACH,EAAD,CAAX;EACD,CAFQ,EAEN,CAACG,WAAD,EAAcH,EAAd,CAFM,CAAT;;EAIA,IAAII,MAAM,KAAK,UAAf,EAA2B;IACzB;IACA,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EACD,IAAIG,KAAJ,EAAW;IACT;IAAA;MAAK,SAAS,EAAC,kBAAf;MAAA,uBACE;QAAA,UAAIA;MAAJ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAGD;;EACD,IAAI,CAACD,WAAL,EAAkB;IAChB,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAhCa,CAkCd;EACA;EACA;EACA;;;EAEA,oBACE;IAAA,wBACE,QAAC,gBAAD;MACE,IAAI,EAAEA,WAAW,CAACE,IADpB;MAEE,KAAK,EAAEF,WAAW,CAACG,KAFrB;MAGE,KAAK,EAAEH,WAAW,CAACI,KAHrB;MAIE,MAAM,EAAEJ,WAAW,CAACK;IAJtB;MAAA;MAAA;MAAA;IAAA,QADF,eAOE,QAAC,KAAD;MAAO,IAAI,EAAG,WAAUZ,MAAM,CAACC,EAAG,EAAlC;MAAqC,KAAK,MAA1C;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,IAAD;UAAM,SAAS,EAAC,WAAhB;UAA4B,EAAE,EAAG,WAAUD,MAAM,CAACC,EAAG,WAArD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAPF,eAiBE,QAAC,KAAD;MAAO,IAAI,EAAG,WAAUD,MAAM,CAACC,EAAG,WAAlC;MAAA,uBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAjBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD;;GA9DQF,I;UACQR,S,EAUXK,O;;;KAXGG,I;AAgET,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}