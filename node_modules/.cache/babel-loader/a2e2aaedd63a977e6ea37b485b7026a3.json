{"ast":null,"code":"var _jsxFileName = \"A:\\\\Projects\\\\React\\\\React-router\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\quotes\\\\QuoteList.js\";\nimport { Fragment } from \"react\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteList = props => {\n  // sorting using query parameters: which is optional\n  const sortingHandler = () => {\n    console.log(\"going up\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sortingHandler,\n        children: \"Sorting Asc \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","QuoteItem","classes","QuoteList","props","sortingHandler","console","log","sorting","list","quotes","map","quote","id","author","text"],"sources":["A:/Projects/React/React-router/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from \"react\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst QuoteList = (props) => {\n  // sorting using query parameters: which is optional\n  const sortingHandler = () => {\n    console.log(\"going up\");\n  };\n\n  return (\n    <Fragment>\n      {/*the sort button   */}\n      <div className={classes.sorting}>\n        <button onClick={sortingHandler}>Sorting Asc </button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAC3B;EACA,MAAMC,cAAc,GAAG,MAAM;IAC3BC,OAAO,CAACC,GAAR,CAAY,UAAZ;EACD,CAFD;;EAIA,oBACE,QAAC,QAAD;IAAA,wBAEE;MAAK,SAAS,EAAEL,OAAO,CAACM,OAAxB;MAAA,uBACE;QAAQ,OAAO,EAAEH,cAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE;MAAI,SAAS,EAAEH,OAAO,CAACO,IAAvB;MAAA,UACGL,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;QAEE,EAAE,EAAEA,KAAK,CAACC,EAFZ;QAGE,MAAM,EAAED,KAAK,CAACE,MAHhB;QAIE,IAAI,EAAEF,KAAK,CAACG;MAJd,GACOH,KAAK,CAACC,EADb;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAxBD;;KAAMV,S;AA0BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}