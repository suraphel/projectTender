{"ast":null,"code":"var _jsxFileName = \"A:\\\\Projects\\\\React\\\\React-router\\\\ProjectTender\\\\src\\\\components\\\\quotes\\\\QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteForm = props => {\n  _s();\n\n  const [isEntered, setIsEntered] = useState(false);\n  const authorInputRef = useRef();\n  const titleInputRef = useRef();\n  const pdate = useRef();\n  const fdate = useRef();\n  const country = useRef();\n  const region = useRef();\n  const Description = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredTitle = titleInputRef.current.value;\n    const enteredpdate = pdate.current.value;\n    const enteredfdata = fdate.current.value;\n    const enteredcountry = country.current.value;\n    const enteredregion = region.current.value; // optional: Could validate here\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredTitle,\n      pdate: enteredpdate,\n      fdate: enteredfdata,\n      country: enteredcountry,\n      region: enteredregion\n    });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntered(true);\n    console.log(\"focus\");\n  };\n\n  const formReady = () => {\n    setIsEntered(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      when: isEntered,\n      message: location => \"You sure want to leave this page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onFocus: formFocusHandler,\n        className: classes.form,\n        onSubmit: submitFormHandler,\n        children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loading,\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"author\",\n            ref: authorInputRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Publication Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"publicationdate\",\n            ref: pdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Tender floating Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            ref: fdate,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"region\",\n            ref: region\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"country\",\n            id: \"country\",\n            ref: country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Tender Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            rows: \"5\",\n            ref: titleInputRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: formReady,\n            className: \"btn\",\n            children: \"Add Tender Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteForm, \"a1T/DN5yi5gSsj9Huir4KqzPjZ0=\");\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"names":["useRef","useState","Prompt","Fragment","Card","LoadingSpinner","classes","QuoteForm","props","isEntered","setIsEntered","authorInputRef","titleInputRef","pdate","fdate","country","region","Description","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredTitle","enteredpdate","enteredfdata","enteredcountry","enteredregion","onAddQuote","author","text","formFocusHandler","console","log","formReady","location","form","isLoading","loading","control","actions"],"sources":["A:/Projects/React/React-router/ProjectTender/src/components/quotes/QuoteForm.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport { Fragment } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntered, setIsEntered] = useState(false);\n\n  const authorInputRef = useRef();\n  const titleInputRef = useRef();\n  const pdate = useRef();\n  const fdate = useRef();\n  const country = useRef();\n  const region = useRef();\n  const Description = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredTitle = titleInputRef.current.value;\n    const enteredpdate = pdate.current.value;\n    const enteredfdata = fdate.current.value;\n    const enteredcountry = country.current.value;\n    const enteredregion = region.current.value;\n    // optional: Could validate here\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredTitle,\n      pdate: enteredpdate,\n      fdate: enteredfdata,\n      country: enteredcountry,\n      region: enteredregion,\n    });\n  }\n  const formFocusHandler = () => {\n    setIsEntered(true);\n    console.log(\"focus\");\n  };\n\n  const formReady = () => {\n    setIsEntered(false);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntered}\n        message={(location) => \"You sure want to leave this page\"}\n      />\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} required />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Publication Date</label>\n            <input type=\"date\" id=\"publicationdate\" ref={pdate} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Tender floating Date</label>\n            <input type=\"date\" id=\"date\" ref={fdate} required />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Region</label>\n            <input type=\"text\" id=\"region\" ref={region}></input>\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Country</label>\n            <input type=\"country\" id=\"country\" ref={country}></input>\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Tender Title</label>\n            <textarea\n              id=\"text\"\n              rows=\"5\"\n              ref={titleInputRef}\n              required\n            ></textarea>\n          </div>\n\n          <div className={classes.actions}>\n            <button onClick={formReady} className=\"btn\">\n              Add Tender Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}